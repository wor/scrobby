AC_INIT(configure.in)

AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE(scrobby, 0.2_pre)

AC_PREREQ(2.59)

AC_LANG_CPLUSPLUS
AC_PROG_CXX
AM_PROG_LIBTOOL


dnl if host is freebsd, then add -lkvm to the list of libraries
case $host_os in
  *freebsd*) LDFLAGS="$LDFLAGS -lkvm" ;;
esac

dnl ========================
dnl = checking for openssl =
dnl ========================
PKG_CHECK_MODULES([libssl], libssl, , 
		  AC_CHECK_LIB(ssl, EVP_DigestInit_ex, [
		       	libssl_LIBS="-lssl"
			libssl_CFLAGS="" ], AC_MSG_ERROR([libssl library is required])))
AC_SUBST(libssl_CFLAGS)
AC_SUBST(libssl_LIBS)
AC_CHECK_LIB(crypto, DES_xcbc_encrypt)
CPPFLAGS="$CPPFLAGS $libssl_CFLAGS"
LDFLAGS="$LDFLAGS $libssl_LDFLAGS"
AC_CHECK_HEADERS([openssl/evp.h], , AC_MSG_ERROR([missing openssl/evp.h header]))

dnl =================================
dnl = checking for curl and pthread =
dnl =================================
AC_PATH_PROG(CURL_CONFIG, curl-config)
if test "$CURL_CONFIG" != "" ; then
	CPPFLAGS="$CPPFLAGS `$CURL_CONFIG --cflags`"
	LDFLAGS="$LDFLAGS `$CURL_CONFIG --libs`"
	AC_CHECK_LIB(curl, curl_easy_init, , AC_MSG_ERROR([curl library is required]))
	AC_CHECK_HEADERS([curl/curl.h], , AC_MSG_ERROR([missing curl.h header]))
else
	AC_MSG_ERROR([curl-config executable is missing])
fi

AC_CONFIG_FILES([Makefile doc/Makefile src/Makefile])
AC_OUTPUT
